{"name":"Opensgn-easy project","tagline":"Necessary files and documentation for easily building native GNU/Linux system for Samsung Galaxy Note 10.1","body":"### Welcome to Opensgn-easy.\r\nPerhaps, you are searching for instructions. [Here they are](#Instruction)!\r\n\r\n### Authors and Contributors\r\nOriginal project was created by exception13 ([opensgn](http://code.google.com/p/opensgn/)), some modifications added by @X-Stranger ([N8000](https://github.com/X-Stranger/N8000)) and this very easy instruction is being written by @thermatk.\r\n\r\n### Support or Contact\r\nHaving trouble? Visit the topic on XDA-Developers(link)!\r\n\r\n# Instruction\r\n\r\n## Prerequisites\r\n* Samsung Galaxy Note 10.1 with root, BusyBox, terminal emulator app and some free space\r\n* A real or virtual PC with Ubuntu (any other GNU/Linux should be working though) and some free space\r\n* Some free time\r\n\r\n## Easy way - using prepared binaries (not ready yet!)\r\nDownload recovery.img: DOWNLOAD LINK SHOULD BE HERE\r\nDownload ubuntu.img: DOWNLOAD LINK SHOULD BE HERE\r\nUnpack the files from archives and place them to root of your internal sdcard. Go to your preffered terminal emulator app and type:\r\n\r\n```\r\nsu\r\ndd if=recovery.img of=/dev/block/mmcblk0p6\r\n```\r\n\r\nNow you can turn off your tablet and boot up Ubuntu by holding Volume Up and Power buttons.\r\n\r\n## Harder way - how to prepare binaries\r\n### Compile kernel\r\n1. Boot up your Ubuntu PC\r\n1. Install git and some tools for building:\r\n\r\n```\r\nsudo apt-get install git build-essential libncurses5-dev\r\n```\r\n\r\n1. Now create a folder and clone the repository with kernel sources there:\r\n\r\n```\r\nmkdir compileopensgn\r\ncd compileopensgn/\r\ngit clone https://github.com/X-Stranger/N8000.git -b arch\r\n```\r\n\r\n1. Clone the prebuilt toolchain to the same “compileopensgn” folder and move it to /opt:\r\n\r\n```\r\ngit clone https://android.googlesource.com/platform/prebuilt\r\nsudo mv prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/ /opt/\r\nrm -r prebuilt\r\n```\r\n\r\n1. Now go to the downloaded kernel and configure it:\r\n\r\n```\r\ncd N8000\r\nmake mrproper\r\nexport CROSS_COMPILE=/opt/arm-eabi-4.4.3/bin/arm-eabi-\r\nexport ARCH=arm\r\nexport SUBARCH=armv7h\r\nmake n8000_linux_mali_defconfig\r\n```\r\n\r\n1. Compile kernel:\r\n\r\n```\r\nexport INSTALL_MOD_PATH=$(pwd)/compiledmodules\r\nmake -j2\r\nmake modules_install\r\n```\r\n\r\n1. Copy compiled kernel and modules:\r\n\r\n```\r\ncd ..\r\nmkdir results\r\nmkdir results/boot/\r\ncp N8000/arch/arm/boot/zImage results/boot/zImage\r\ncp N8000/System.map results/boot/System.map\r\ncp -r N8000/compiledmodules/lib/ results/\r\n```\r\n\r\n### Create rootfs (not ready yet!)\r\n1. Get LinuxDeploy and apply these settings:...\r\n1. Copy the modules directory from previous step to the appropriate place\r\n1. Do something to get it working...\r\n1. Leave it in root of your sdcard with a certain name configured in recovery","google":"UA-39539447-1","note":"Don't delete this file! It's used internally to help with page regeneration."}